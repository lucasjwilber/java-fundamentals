/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package inheritance;

import org.junit.Test;
import static org.junit.Assert.*;

public class LibraryTest {
    @Test public void testSomeLibraryMethod() {
        Library classUnderTest = new Library();
        assertTrue("someLibraryMethod should return 'true'", classUnderTest.someLibraryMethod());
    }

    @Test public void checkRestaurantConstructorFunctionality() {
        Restaurant restaurant = new Restaurant("Pizza Hut", 2);
        assertEquals(restaurant.name, "Pizza Hut");
        assertEquals(restaurant.price, 2);
    }

    @Test public void checkRestaurantToString() {
        Restaurant restaurant = new Restaurant("Pizza Hut", 2);
        String restaurantString = restaurant.toString();
        assertTrue(restaurantString.contains("Name: Pizza Hut"));
    }

    @Test public void checkReviewConstructorFunctionality() {
        Review review = new Review(0, "Gordon Ramsay", "Absolute garbage, ew");
        assertEquals(review.body, "Absolute garbage, ew");
        assertEquals(review.rating, 0);
    }

    @Test public void checkReviewToString() {
        Review review = new Review(0, "Gordon Ramsay", "Absolute garbage, ew");
        assertTrue(review.toString().contains("Author: Gordon Ramsay"));
        assertTrue(review.toString().contains("Rating: 0"));
    }

    @Test public void checkReviewsListInstantiation() {
        Restaurant restaurant = new Restaurant("Pizza Hut", 2);
        restaurant.reviews.add(new Review(0, "Gordon Ramsay", "Absolute garbage, ew"));
        assertTrue(restaurant.reviews.toString().contains("Rating: 0"));
    }

    @Test public void checkAddReviewMethod() {
        Restaurant restaurant = new Restaurant("Pizza Hut", 2);
        restaurant.addReview(0, "Gordon Ramsay", "Absolute garbage, ew");
        restaurant.addReview(3, "Papa John", "Bold, innovative and refreshing");
        assertTrue(restaurant.reviews.toString().contains("Absolute garbage"));
        assertTrue(restaurant.reviews.toString().contains("Rating: 3"));
    }

    @Test public void checkRatingIsAverageOfAllRatings() {
        Restaurant restaurant = new Restaurant("Pizza Hut", 2);
        restaurant.addReview(0, "Gordon Ramsay", "Absolute garbage, ew");
        restaurant.addReview(3, "Papa John", "Bold, innovative and refreshing");
        //IntelliJ suggests I use assertEquals but then tells me that test is deprecated when used to compare floats, and fails.
        assertTrue(restaurant.rating == 1.5);
        restaurant.addReview(3, "Gordon Ramsay", "Absolute garbage, ew");
        assertTrue(restaurant.rating == 2);
    }

    @Test public void checkThatRatingsMustBe0to5() {
        Restaurant restaurant = new Restaurant("Pizza Hut", 2);
        System.out.println(restaurant.rating);
        System.out.println(restaurant.totalReviews);
        System.out.println(restaurant.ratingSum);
        restaurant.addReview(-1, "Gordon Ramsay", "Absolute garbage, ew");
        System.out.println(restaurant.rating);
        System.out.println(restaurant.totalReviews);
        System.out.println(restaurant.ratingSum);
        restaurant.addReview(6, "Papa John", "Bold, innovative and refreshing");
        System.out.println(restaurant.rating);
        System.out.println(restaurant.totalReviews);
        System.out.println(restaurant.ratingSum);
        restaurant.addReview(2, "Papa John", "Bold, innovative and refreshing");
        System.out.println(restaurant.rating);
        System.out.println(restaurant.totalReviews);
        System.out.println(restaurant.ratingSum);
        restaurant.addReview(4, "Papa John", "Bold, innovative and refreshing");
        System.out.println(restaurant.rating);
        System.out.println(restaurant.totalReviews);
        System.out.println(restaurant.ratingSum);
//        assertTrue(restaurant.rating == 0);
    }
}
